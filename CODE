#include<stdio.h>
#include<string.h>
#define max_size 100

struct student 
{
    char name[50];
    int roll_number;
    int year_education;
    float fee;
    char course[100];
    char grade;
};

struct student stack[max_size];
int top = -1;
void push(struct student students)
{
    if (top == max_size - 1)
    {
        printf("Stack Overflow\n");
        return;
    }
    top++;
    stack[top] = students;
}

void display()
{
    if(top==-1)
    printf("Student data base is empty");
        for (int i = top; i >= 0; i--)
    {
        printf("Name: %s\n", stack[i].name);
        printf("Roll Number: %d\n", stack[i].roll_number);
        printf("Year of Education: %d\n", stack[i].year_education);
        printf("Fee: %.2f\n", stack[i].fee);
        printf("Course: %s\n", stack[i].course);
        printf("Grade: %c\n", stack[i].grade);
        printf("\n");
    }
}
void bubblesort_rollnumber()
{
    for (int i = 0; i <= top; i++)
        for (int j = 0; j < top - i; j++)
            if (stack[j].roll_number > stack[j + 1].roll_number)
            {
                struct student temp = stack[j];
                stack[j] = stack[j + 1];
                stack[j + 1] = temp;
            }
}
void bubblesort_year()
{
    for (int i = 0; i <= top; i++)
        for (int j = 0; j < top - i; j++)
            if (stack[j].year_education > stack[j + 1].year_education)
            {
                struct student temp = stack[j];
                stack[j] = stack[j + 1];
                stack[j + 1] = temp;
            }
}
void deletion()
{
    if(top==-1)
    {
        printf("Stack is empty");
        return;
    }
        int rollNumber;
        printf("Enter the roll number of the student to delete : ");
        scanf("%d",&rollNumber);
        
        int found = 0;
        for (int i = top; i >= 0; i--)
        {
            if (stack[i].roll_number == rollNumber)
            {
                found = 1;
                for (int j = i; j < top; j++)
                {
                    stack[j] = stack[j + 1];
                }
                top--;
                printf("Student data with roll number %d deleted from stack\n", rollNumber);
                break;
            }
        }
        if(!found)
        printf("Student data with roll number %d not found in the stack\n", rollNumber);
}


int noofpeople;//global variable


int main()
{
        int choice;
        
    struct student students[max_size];
    
    for(int i=1;i>0;i++)
    {
                printf("\nEnter 1 to Enter the details of the student : ");
                printf("\nEnter 2 to Print the data of the students present in the data base : ");
                printf("\nEnter 3 to Print the data of the students present in the data base in the descending order of their roll numbers: ");
                printf("\nEnter 4 to Print the data of the students present in the data base in the descending order of their Year of Education: ");
                printf("\nEnter 5 to delete the required student based on their roll number : ");
                printf("\nEnter 6 to print the data and exit : \n");
                printf("\nEnter your choice :");
                scanf("%d",&choice);
                printf("\n");
                
            switch(choice)
            {
                    case 1:
                printf("Enter the number of students' data you want to enter: ");
                scanf("%d", &noofpeople);
                for (int i = 0; i < noofpeople; i++)
                {
                    printf("\nEnter the details of student %d:\n", i + 1);
                    printf("Enter the name of the student : ");
                    scanf("%s", students[i].name);
                    printf("Enter the roll number of the student : ");
                    scanf("%d", &students[i].roll_number);
                    printf("Enter the year of the student : ");
                    scanf("%d", &students[i].year_education);
                    printf("Enter the fee of the student : ");
                    scanf("%f", &students[i].fee);
                    printf("Enter the course of the student : ");
                    scanf("%s", students[i].course);
                    printf("Enter the grade of the student : ");
                    scanf(" %s", &students[i].grade);
    
                    push(students[i]);
                }
            break;
                        
                        case 2:
                                display();                
                                printf("\n");


                                break;
                                
                        case 3:
                            bubblesort_rollnumber();
                                display();
                                printf("\n");


                                break;
                                
                        case 4:
                            bubblesort_year();
                                display();
                                printf("\n");
                                break;
                                
                        case 5:
                           deletion();
                       printf("\n");


                           break;
                           
                        case 6:
                            display();
                            printf("\n");
                                return 0;
                                
                        default:
                                printf("Invalid Entry of choice : ");
                }
        }
}
